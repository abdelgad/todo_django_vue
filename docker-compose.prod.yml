version: "3.7"

services:
  backend:
    build:
      context: djangobackend
      dockerfile: Dockerfile.prod
    command: gunicorn todo.config.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    environment:
      - "DEBUG=${DEBUG}"
      - "SECRET_KEY=${SECRET_KEY}"
      - "DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}"
      - "DATABASE=${DATABASE}"
      - "SQL_ENGINE=${SQL_ENGINE}"
      - "SQL_DATABASE=${SQL_DATABASE}"
      - "SQL_USER=${SQL_USER}"
      - "SQL_PASSWORD=${SQL_PASSWORD}"
      - "SQL_HOST=${SQL_HOST}"
      - "SQL_PORT=${SQL_PORT}"
    networks:
      - main
    depends_on:
      - db

  db:
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_DB=${SQL_DATABASE}"
      - "POSTGRES_USER=${SQL_USER}"
      - "POSTGRES_PASSWORD=${SQL_PASSWORD}"
    networks:
      - main

  nginx:
    build: ./nginx
    ports:
      - "8080:80"
    networks:
      - main
    volumes:
      - frontend_build:/var/www/frontend:ro
    depends_on:
      - backend
      - frontend

  frontend:
    build:
      context: vuefrontend
      dockerfile: Dockerfile
    command: tail -f /dev/null
    volumes:
      - frontend_build:/frontend/dist

networks:
  main:

volumes:
  postgres_data:
  frontend_build:
